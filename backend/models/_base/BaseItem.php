<?php

/**
 * This is the model base class for the table "{{item}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Item".
 *
 * Columns in table "{{item}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $nid
 * @property string $uid
 * @property string $modified
 * @property string $text
 * @property string $correct
 * @property string $order
 * @property string $status
 *
 */
abstract class BaseItem extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{item}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Item|Items', $n);
	}

	public static function representingColumn() {
		return 'text';
	}

	public function rules() {
		return array(
			//array('nid', 'required'),
			array('nid, uid, modified, order', 'length', 'max'=>10),
			array('correct', 'length', 'max'=>1),
			array('status', 'length', 'max'=>16),
			array('text', 'safe'),
			array('uid, modified, text, correct, order, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, nid, uid, modified, text, correct, order, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nid' => Yii::t('app', 'Nid'),
			'uid' => Yii::t('app', 'Uid'),
			'modified' => Yii::t('app', 'Modified'),
			'text' => Yii::t('app', 'Text'),
			'correct' => Yii::t('app', 'Correct'),
			'order' => Yii::t('app', 'Order'),
			'status' => Yii::t('app', 'Status'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('nid', $this->nid, true);
		$criteria->compare('uid', $this->uid, true);
		$criteria->compare('modified', $this->modified, true);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('correct', $this->correct, true);
		$criteria->compare('order', $this->order, true);
		$criteria->compare('status', $this->status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}