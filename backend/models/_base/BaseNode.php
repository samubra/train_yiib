<?php

/**
 * This is the model base class for the table "{{node}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Node".
 *
 * Columns in table "{{node}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $text
 * @property string $created
 * @property string $modified
 * @property string $uid
 * @property string $cid
 * @property string $status
 * @property integer $extent
 * @property integer $parent
 * @property string $itemNum
 * @property string $aloowPublic
 *
 */
abstract class BaseNode extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return '{{node}}';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Node|Nodes', $n);
    }

    public static function representingColumn() {
        return 'text';
    }

    public function rules() {
        return array(
            array('text, cid', 'required'),
            array('extent, parent', 'numerical', 'integerOnly' => true),
            array('created, modified, uid, cid, itemNum', 'length', 'max' => 10),
            array('status', 'length', 'max' => 16),
            array('aloowPublic', 'length', 'max' => 1),
            array('created, modified, uid, status, extent, parent, itemNum, aloowPublic', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, text, created, modified, uid, cid, status, extent, parent, itemNum, aloowPublic', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'text' => Yii::t('app', 'Text'),
            'created' => Yii::t('app', 'Created'),
            'modified' => Yii::t('app', 'Modified'),
            'uid' => Yii::t('app', 'Uid'),
            'cid' => Yii::t('app', 'Cid'),
            'status' => Yii::t('app', 'Status'),
            'extent' => Yii::t('app', 'Extent'),
            'parent' => Yii::t('app', 'Parent'),
            'itemNum' => Yii::t('app', 'Item Num'),
            'aloowPublic' => Yii::t('app', 'Aloow Public'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id, true);
        $criteria->compare('text', $this->text, true);
        $criteria->compare('created', $this->created, true);
        $criteria->compare('modified', $this->modified, true);
        $criteria->compare('uid', $this->uid, true);
        $criteria->compare('cid', $this->cid, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('extent', $this->extent);
        $criteria->compare('parent', $this->parent);
        $criteria->compare('itemNum', $this->itemNum, true);
        $criteria->compare('aloowPublic', $this->aloowPublic, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

}